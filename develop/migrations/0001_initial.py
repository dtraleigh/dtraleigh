# Generated by Django 3.2.8 on 2022-08-27 18:54

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdministrativeAlternate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_number', models.CharField(blank=True, max_length=300, null=True, verbose_name='Case Number')),
                ('case_url', models.TextField(blank=True, null=True, verbose_name='Plan URL')),
                ('project_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plan Name')),
                ('status', models.CharField(blank=True, max_length=300, null=True, verbose_name='Status')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Administrative Alternate Request',
            },
        ),
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scrape', models.BooleanField(default=True)),
                ('scan', models.BooleanField(default=True)),
                ('notify', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='DesignAlternateCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Case Number')),
                ('case_url', models.TextField(blank=True, null=True, verbose_name='Plan URL')),
                ('project_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plan Name')),
                ('status', models.CharField(blank=True, max_length=100, null=True, verbose_name='Status')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Design Alternate Case',
            },
        ),
        migrations.CreateModel(
            name='DevelopmentPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectid', models.IntegerField()),
                ('devplan_id', models.IntegerField(blank=True, null=True)),
                ('submitted', models.DateField(blank=True, null=True)),
                ('submitted_field', models.IntegerField(blank=True, null=True)),
                ('approved', models.DateField(blank=True, null=True)),
                ('daystoappr', models.IntegerField(blank=True, null=True)),
                ('plan_type', models.CharField(blank=True, max_length=39, null=True)),
                ('status', models.CharField(blank=True, max_length=18, null=True)),
                ('appealperi', models.DateField(blank=True, null=True)),
                ('updated', models.DateField(blank=True, null=True)),
                ('sunset_dat', models.DateField(blank=True, null=True)),
                ('acreage', models.FloatField(blank=True, null=True)),
                ('major_stre', models.CharField(blank=True, max_length=31, null=True)),
                ('cac', models.CharField(blank=True, max_length=18, null=True)),
                ('engineer', models.CharField(blank=True, max_length=35, null=True)),
                ('engineer_p', models.CharField(blank=True, max_length=10, null=True)),
                ('developer', models.CharField(blank=True, max_length=48, null=True)),
                ('developer_field', models.CharField(blank=True, max_length=13, null=True)),
                ('plan_name', models.CharField(blank=True, max_length=100, null=True)),
                ('planurl', models.CharField(blank=True, max_length=107, null=True)),
                ('planurl_ap', models.CharField(blank=True, max_length=1, null=True)),
                ('planner', models.CharField(blank=True, max_length=30, null=True)),
                ('lots_req', models.IntegerField(blank=True, null=True)),
                ('lots_rec', models.IntegerField(blank=True, null=True)),
                ('lots_apprv', models.IntegerField(blank=True, null=True)),
                ('sq_ft_req', models.IntegerField(blank=True, null=True)),
                ('units_appr', models.IntegerField(blank=True, null=True)),
                ('units_req', models.IntegerField(blank=True, null=True)),
                ('zoning', models.CharField(blank=True, max_length=34, null=True)),
                ('plan_numbe', models.CharField(blank=True, max_length=15, null=True)),
                ('creationda', models.DateField(blank=True, null=True)),
                ('creator', models.CharField(blank=True, max_length=12, null=True)),
                ('editdate', models.DateField(blank=True, null=True)),
                ('editor', models.CharField(blank=True, max_length=12, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Development Plan',
            },
        ),
        migrations.CreateModel(
            name='NeighborhoodMeeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_datetime_details', models.CharField(blank=True, max_length=300, null=True, verbose_name='Meeting Date/Time')),
                ('meeting_location', models.CharField(blank=True, max_length=300, null=True, verbose_name='Meeting Location')),
                ('rezoning_site_address', models.CharField(blank=True, max_length=300, null=True, verbose_name='Rezoning Site Address')),
                ('rezoning_site_address_url', models.TextField(blank=True, null=True, verbose_name='Rezoning Site Address URL')),
                ('rezoning_request', models.CharField(blank=True, max_length=300, null=True, verbose_name='Rezoning Request')),
                ('rezoning_request_url', models.TextField(blank=True, null=True, verbose_name='Rezoning Request URL')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Neighborhood Meeting',
            },
        ),
        migrations.CreateModel(
            name='SiteReviewCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Case Number')),
                ('case_url', models.TextField(blank=True, null=True, verbose_name='Plan URL')),
                ('project_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plan Name')),
                ('status', models.CharField(blank=True, max_length=100, null=True, verbose_name='Status')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Site Review Case',
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Subscribed')),
                ('name', models.CharField(max_length=254)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('send_emails', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('topic_id', models.IntegerField(blank=True, null=True, verbose_name='Topic ID')),
                ('api_key', models.CharField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TextChangeCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Case Number')),
                ('case_url', models.TextField(blank=True, null=True, verbose_name='Plan URL')),
                ('project_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plan Name')),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True, verbose_name='Status')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Text Change Case',
            },
        ),
        migrations.CreateModel(
            name='TrackArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectid', models.IntegerField()),
                ('short_name', models.CharField(max_length=3)),
                ('long_name', models.CharField(max_length=13)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='WakeCorporate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectid', models.IntegerField()),
                ('short_name', models.CharField(max_length=3, null=True)),
                ('long_name', models.CharField(max_length=13, null=True)),
                ('ordinance_field', models.CharField(max_length=18, null=True)),
                ('effective_field', models.DateField(null=True)),
                ('shapearea', models.FloatField(null=True)),
                ('shapelen', models.FloatField(null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Zoning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zpyear', models.SmallIntegerField(blank=True, null=True, verbose_name='Year Submitted')),
                ('zpnum', models.SmallIntegerField(blank=True, null=True, verbose_name='Zoning Number')),
                ('location', models.CharField(blank=True, max_length=300, null=True, verbose_name='Location')),
                ('location_url', models.TextField(blank=True, null=True, verbose_name='Location URL')),
                ('status', models.CharField(blank=True, max_length=300, null=True, verbose_name='Status')),
                ('plan_url', models.TextField(blank=True, null=True, verbose_name='Plan URL')),
                ('received_by', models.CharField(blank=True, max_length=300, null=True, verbose_name='Received By')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Zoning Request',
            },
        ),
        migrations.CreateModel(
            name='HistoricalZoning',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('zpyear', models.SmallIntegerField(blank=True, null=True, verbose_name='Year Submitted')),
                ('zpnum', models.SmallIntegerField(blank=True, null=True, verbose_name='Zoning Number')),
                ('location', models.CharField(blank=True, max_length=300, null=True, verbose_name='Location')),
                ('location_url', models.TextField(blank=True, null=True, verbose_name='Location URL')),
                ('status', models.CharField(blank=True, max_length=300, null=True, verbose_name='Status')),
                ('plan_url', models.TextField(blank=True, null=True, verbose_name='Plan URL')),
                ('received_by', models.CharField(blank=True, max_length=300, null=True, verbose_name='Received By')),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Zoning Request',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTextChangeCase',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('case_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Case Number')),
                ('case_url', models.TextField(blank=True, null=True, verbose_name='Plan URL')),
                ('project_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plan Name')),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True, verbose_name='Status')),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Text Change Case',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSiteReviewCase',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('case_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Case Number')),
                ('case_url', models.TextField(blank=True, null=True, verbose_name='Plan URL')),
                ('project_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plan Name')),
                ('status', models.CharField(blank=True, max_length=100, null=True, verbose_name='Status')),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Site Review Case',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNeighborhoodMeeting',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('meeting_datetime_details', models.CharField(blank=True, max_length=300, null=True, verbose_name='Meeting Date/Time')),
                ('meeting_location', models.CharField(blank=True, max_length=300, null=True, verbose_name='Meeting Location')),
                ('rezoning_site_address', models.CharField(blank=True, max_length=300, null=True, verbose_name='Rezoning Site Address')),
                ('rezoning_site_address_url', models.TextField(blank=True, null=True, verbose_name='Rezoning Site Address URL')),
                ('rezoning_request', models.CharField(blank=True, max_length=300, null=True, verbose_name='Rezoning Request')),
                ('rezoning_request_url', models.TextField(blank=True, null=True, verbose_name='Rezoning Request URL')),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Neighborhood Meeting',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDevelopmentPlan',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('objectid', models.IntegerField()),
                ('devplan_id', models.IntegerField(blank=True, null=True)),
                ('submitted', models.DateField(blank=True, null=True)),
                ('submitted_field', models.IntegerField(blank=True, null=True)),
                ('approved', models.DateField(blank=True, null=True)),
                ('daystoappr', models.IntegerField(blank=True, null=True)),
                ('plan_type', models.CharField(blank=True, max_length=39, null=True)),
                ('status', models.CharField(blank=True, max_length=18, null=True)),
                ('appealperi', models.DateField(blank=True, null=True)),
                ('updated', models.DateField(blank=True, null=True)),
                ('sunset_dat', models.DateField(blank=True, null=True)),
                ('acreage', models.FloatField(blank=True, null=True)),
                ('major_stre', models.CharField(blank=True, max_length=31, null=True)),
                ('cac', models.CharField(blank=True, max_length=18, null=True)),
                ('engineer', models.CharField(blank=True, max_length=35, null=True)),
                ('engineer_p', models.CharField(blank=True, max_length=10, null=True)),
                ('developer', models.CharField(blank=True, max_length=48, null=True)),
                ('developer_field', models.CharField(blank=True, max_length=13, null=True)),
                ('plan_name', models.CharField(blank=True, max_length=100, null=True)),
                ('planurl', models.CharField(blank=True, max_length=107, null=True)),
                ('planurl_ap', models.CharField(blank=True, max_length=1, null=True)),
                ('planner', models.CharField(blank=True, max_length=30, null=True)),
                ('lots_req', models.IntegerField(blank=True, null=True)),
                ('lots_rec', models.IntegerField(blank=True, null=True)),
                ('lots_apprv', models.IntegerField(blank=True, null=True)),
                ('sq_ft_req', models.IntegerField(blank=True, null=True)),
                ('units_appr', models.IntegerField(blank=True, null=True)),
                ('units_req', models.IntegerField(blank=True, null=True)),
                ('zoning', models.CharField(blank=True, max_length=34, null=True)),
                ('plan_numbe', models.CharField(blank=True, max_length=15, null=True)),
                ('creationda', models.DateField(blank=True, null=True)),
                ('creator', models.CharField(blank=True, max_length=12, null=True)),
                ('editdate', models.DateField(blank=True, null=True)),
                ('editor', models.CharField(blank=True, max_length=12, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Development Plan',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDesignAlternateCase',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('case_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Case Number')),
                ('case_url', models.TextField(blank=True, null=True, verbose_name='Plan URL')),
                ('project_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plan Name')),
                ('status', models.CharField(blank=True, max_length=100, null=True, verbose_name='Status')),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Design Alternate Case',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAdministrativeAlternate',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('case_number', models.CharField(blank=True, max_length=300, null=True, verbose_name='Case Number')),
                ('case_url', models.TextField(blank=True, null=True, verbose_name='Plan URL')),
                ('project_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plan Name')),
                ('status', models.CharField(blank=True, max_length=300, null=True, verbose_name='Status')),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Administrative Alternate Request',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
